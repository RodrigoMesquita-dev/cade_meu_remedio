Index: app/src/main/java/com/example/cademeuremedio/MapsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cademeuremedio;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\n\r\nimport android.Manifest;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.location.Location;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.common.api.Status;\r\nimport com.google.android.gms.location.FusedLocationProviderClient;\r\nimport com.google.android.gms.location.LocationServices;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.UiSettings;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.libraries.places.api.Places;\r\nimport com.google.android.libraries.places.api.model.Place;\r\nimport com.google.android.libraries.places.widget.Autocomplete;\r\nimport com.google.android.libraries.places.widget.AutocompleteActivity;\r\nimport com.google.android.libraries.places.widget.model.AutocompleteActivityMode;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\npublic class MapsActivity extends AppCompatActivity {\r\n    //inicializar variaveis\r\n    SupportMapFragment supportMapFragment;\r\n    FusedLocationProviderClient client;\r\n    EditText editText;\r\n    TextView textView,textView2;\r\n\r\n    private GoogleMap googlemap;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_maps);\r\n\r\n        //atribuir variavel\r\n        supportMapFragment = (SupportMapFragment) getSupportFragmentManager()\r\n                .findFragmentById(R.id.google_map);\r\n        editText = findViewById(R.id.editText);\r\n        textView = findViewById(R.id.textView);\r\n        textView2 = findViewById(R.id.textView2);\r\n\r\n        //iniciar places\r\n        Places.initialize(getApplicationContext(),\"AIzaSyBqtgH-0N2-Nd4n11UnxVN2Ojjsk4w8ytA\");\r\n\r\n        //Setar EditText nao focavel\r\n        editText.setFocusable(false);\r\n        editText.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                //iniciar campo de lista do places\r\n                List<Place.Field> fieldList = Arrays.asList(Place.Field.ADDRESS,\r\n                        Place.Field.LAT_LNG,Place.Field.NAME);\r\n                //criar intent\r\n                Intent intent = new Autocomplete.IntentBuilder(AutocompleteActivityMode.OVERLAY\r\n                        ,fieldList).build(MapsActivity.this);\r\n                //iniciar ativity resultados\r\n                startActivityForResult(intent,100);\r\n            }\r\n        });\r\n\r\n        //iniciar fusedlocation\r\n        client = LocationServices.getFusedLocationProviderClient(this);\r\n        //checar permissoes\r\n        if (ActivityCompat.checkSelfPermission(MapsActivity.this,\r\n                Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {\r\n            //quando garantida\r\n            //invocar metodo\r\n            getCurrentLocation();\r\n        } else {\r\n            //quando a permissao neagda\r\n            //pedir permissao\r\n            ActivityCompat.requestPermissions(MapsActivity.this,\r\n                    new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, 44);\r\n        }\r\n    }\r\n\r\n    private void getCurrentLocation() {\r\n        //iniciar a task location\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            // TODO: Consider calling\r\n            //    ActivityCompat#requestPermissions\r\n            // here to request the missing permissions, and then overriding\r\n            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\r\n            //                                          int[] grantResults)\r\n            // to handle the case where the user grants the permission. See the documentation\r\n            // for ActivityCompat#requestPermissions for more details.\r\n            return;\r\n        }\r\n        Task<Location> task = client.getLastLocation();\r\n        task.addOnSuccessListener(new OnSuccessListener<Location>() {\r\n            @Override\r\n            public void onSuccess(final Location location) {\r\n                //quando sucedida\r\n                if (location != null) {\r\n                    //sync mapas\r\n                    supportMapFragment.getMapAsync(new OnMapReadyCallback() {\r\n                        @Override\r\n                        public void onMapReady(GoogleMap googleMap) {\r\n                            //iniciar latlng\r\n                            LatLng latLng = new LatLng(location.getLatitude()\r\n                                    , location.getLongitude());\r\n                            //criar opções de marcador\r\n                            MarkerOptions options = new MarkerOptions().position(latLng)\r\n                                    .title(\"estou aqui\");\r\n                            //zoom no mapa\r\n                            googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(latLng, 15));\r\n                            //criar marcador no mapa\r\n                            googleMap.addMarker(options);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        if (requestCode == 44) {\r\n            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                //qaundo permissao garantida\r\n                //invocar metodo\r\n                getCurrentLocation();\r\n            }\r\n        }\r\n    }\r\n\r\n    // autocomplete:\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == 100 && resultCode == RESULT_OK){\r\n            //QUANDO SUCESSO\r\n            //iniciar place\r\n            Place place = Autocomplete.getPlaceFromIntent(data);\r\n            //setar endereço no EditText\r\n            editText.setText(place.getAddress());\r\n            //setar nome da localidade\r\n            textView.setText(String.format(\"Nome: %s\", place.getName()));\r\n            //set latitude & long\r\n            //textView2.setText(String.valueOf(place.getLatLng()));\r\n            textView2.setText(\"Informações disponíveis\");\r\n\r\n            //Mover o mapa para a localização:\r\n            moveTo(place.getLatLng());\r\n\r\n        }else if (resultCode == AutocompleteActivity.RESULT_ERROR){\r\n            //quando der erro\r\n            //inicar status\r\n            Status status= Autocomplete.getStatusFromIntent(data);\r\n            //display toast\r\n            Toast.makeText(getApplicationContext(),status.getStatusMessage()\r\n                    ,Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    protected void moveTo(final LatLng placeToMove){\r\n\r\n        final LatLng latLng = placeToMove;\r\n        // Add a marker in Sydney and move the camera\r\n        supportMapFragment.getMapAsync(new OnMapReadyCallback() {\r\n\r\n            @Override\r\n            public void onMapReady(GoogleMap googleMap) {\r\n                //iniciar latlng\r\n                //criar opções de marcador\r\n                MarkerOptions options = new MarkerOptions().position(latLng)\r\n                        .title(\"estou aqui\");\r\n                //zoom no mapa\r\n                googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(latLng, 15));\r\n                //criar marcador no mapa\r\n                googleMap.addMarker(options);\r\n            }\r\n        });\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/cademeuremedio/MapsActivity.java	(revision 3a8d3e42fa230c2dcec54f8a4cd3e95acca4c508)
+++ app/src/main/java/com/example/cademeuremedio/MapsActivity.java	(date 1607299394529)
@@ -4,17 +4,22 @@
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.core.app.ActivityCompat;
+import androidx.core.content.ContextCompat;
 
 import android.Manifest;
 import android.content.Intent;
 import android.content.pm.PackageManager;
 import android.location.Location;
 import android.os.Bundle;
+import android.util.Log;
 import android.view.View;
 import android.widget.EditText;
 import android.widget.TextView;
 import android.widget.Toast;
 
+import com.example.cademeuremedio.Model.Unidade;
+import com.example.cademeuremedio.Model.UnidadeDAO;
+import com.google.android.gms.common.api.ApiException;
 import com.google.android.gms.common.api.Status;
 import com.google.android.gms.location.FusedLocationProviderClient;
 import com.google.android.gms.location.LocationServices;
@@ -29,6 +34,9 @@
 import com.google.android.gms.tasks.Task;
 import com.google.android.libraries.places.api.Places;
 import com.google.android.libraries.places.api.model.Place;
+import com.google.android.libraries.places.api.model.PlaceLikelihood;
+import com.google.android.libraries.places.api.net.FetchPlaceRequest;
+import com.google.android.libraries.places.api.net.PlacesClient;
 import com.google.android.libraries.places.widget.Autocomplete;
 import com.google.android.libraries.places.widget.AutocompleteActivity;
 import com.google.android.libraries.places.widget.model.AutocompleteActivityMode;
@@ -37,13 +45,16 @@
 import java.util.List;
 import java.util.Map;
 
+import static android.Manifest.permission.ACCESS_FINE_LOCATION;
+
 public class MapsActivity extends AppCompatActivity {
+    private static final String TAG = "const TAG";
     //inicializar variaveis
     SupportMapFragment supportMapFragment;
     FusedLocationProviderClient client;
     EditText editText;
     TextView textView,textView2;
-
+    PlacesClient placesClient;
     private GoogleMap googlemap;
 
 
@@ -59,9 +70,13 @@
         textView = findViewById(R.id.textView);
         textView2 = findViewById(R.id.textView2);
 
+
+
         //iniciar places
         Places.initialize(getApplicationContext(),"AIzaSyBqtgH-0N2-Nd4n11UnxVN2Ojjsk4w8ytA");
 
+        placesClient = Places.createClient(this);
+
         //Setar EditText nao focavel
         editText.setFocusable(false);
         editText.setOnClickListener(new View.OnClickListener() {
@@ -82,7 +97,7 @@
         client = LocationServices.getFusedLocationProviderClient(this);
         //checar permissoes
         if (ActivityCompat.checkSelfPermission(MapsActivity.this,
-                Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {
+                ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {
             //quando garantida
             //invocar metodo
             getCurrentLocation();
@@ -90,13 +105,13 @@
             //quando a permissao neagda
             //pedir permissao
             ActivityCompat.requestPermissions(MapsActivity.this,
-                    new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, 44);
+                    new String[]{ACCESS_FINE_LOCATION}, 44);
         }
     }
 
     private void getCurrentLocation() {
         //iniciar a task location
-        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
+        if (ActivityCompat.checkSelfPermission(this, ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
             // TODO: Consider calling
             //    ActivityCompat#requestPermissions
             // here to request the missing permissions, and then overriding
@@ -131,6 +146,7 @@
                 }
             }
         });
+
     }
 
     @Override
@@ -159,7 +175,15 @@
             textView.setText(String.format("Nome: %s", place.getName()));
             //set latitude & long
             //textView2.setText(String.valueOf(place.getLatLng()));
-            textView2.setText("Informações disponíveis");
+
+            Unidade unidade = new Unidade();
+            unidade = verifFarmacias(place.getId());
+
+            if(unidade != null){
+                textView2.setText("Informações disponíveis");
+            }else{
+                textView2.setText("Informações não disponíveis");
+            }
 
             //Mover o mapa para a localização:
             moveTo(place.getLatLng());
@@ -194,4 +218,15 @@
         });
     }
 
+    protected Unidade verifFarmacias(String place_id){
+        Unidade u = new Unidade();
+        UnidadeDAO ud = new UnidadeDAO(getApplicationContext());
+
+        u = ud.Pesquisar(place_id);
+
+        return u;
+    }
+
+
+
 }
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.cademeuremedio\">\r\n    <!--\r\n         The ACCESS_COARSE/FINE_LOCATION permissions are not required to use\r\n         Google Maps Android API v2, but you must specify either coarse or fine\r\n         location permissions for the \"MyLocation\" functionality.\r\n    -->\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission. ACCESS_COARSE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\">\r\n        <activity android:name=\".login\">\r\n\r\n        </activity>\r\n        <activity\r\n            android:name=\".ui.login.LoginActivity\"\r\n            android:label=\"@string/title_activity_login\" />\r\n        <!--\r\n             The API key for Google Maps-based APIs is defined as a string resource.\r\n             (See the file \"res/values/google_maps_api.xml\").\r\n             Note that the API key is linked to the encryption key used to sign the APK.\r\n             You need a different API key for each encryption key, including the release key that is used to\r\n             sign the APK for publishing.\r\n             You can define the keys for the debug and release targets in src/debug/ and src/release/.\r\n        -->\r\n        <meta-data\r\n            android:name=\"com.google.android.gms.version\"\r\n            android:value=\"@integer/google_play_services_version\" /> <!-- The API key for Google Maps-based APIs. -->\r\n        <meta-data\r\n            android:name=\"com.google.android.geo.API_KEY\"\r\n            android:value=\"@string/google_maps_key\" />\r\n\r\n        <activity\r\n            android:name=\".MapsActivity\"\r\n            android:label=\"@string/title_activity_maps\" />\r\n        <activity android:name=\".Usuario\" />\r\n        <activity android:name=\".Registro_Usuario\" />\r\n        <activity android:name=\".Farmacia\" />\r\n        <activity android:name=\".Mapa\" />\r\n        <activity android:name=\".Menu\" />\r\n        <activity android:name=\".Remedio\" />\r\n        <activity android:name=\".tela_inicial\" />\r\n        <activity android:name=\".MainActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 3a8d3e42fa230c2dcec54f8a4cd3e95acca4c508)
+++ app/src/main/AndroidManifest.xml	(date 1607210419981)
@@ -8,6 +8,7 @@
     -->
     <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
     <uses-permission android:name="android.permission. ACCESS_COARSE_LOCATION" />
+    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
     <uses-permission android:name="android.permission.INTERNET" />
     <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
 
Index: app/src/main/java/com/example/cademeuremedio/Registro_Usuario.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cademeuremedio;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\npublic class Registro_Usuario extends AppCompatActivity {\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_registro__usuario);\r\n\r\n\r\n        Button btnConfirmar = (Button) findViewById(R.id.btnConfirmar);\r\n        Button btnVoltar = (Button) findViewById(R.id.btnVoltar);\r\n\r\n\r\n\r\n        btnConfirmar.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                /*\r\n\r\n                EditText txtEmail = (EditText) findViewById(R.id.txtEmail);\r\n                EditText txtNome = (EditText) findViewById(R.id.txtNome);\r\n                EditText txtTelefone = (EditText) findViewById(R.id.txtTelefone);\r\n                EditText txtCelular = (EditText) findViewById(R.id.txtCelular);\r\n                EditText txtSenha = (EditText) findViewById(R.id.txtSenha);\r\n                EditText txtSenha2 = (EditText) findViewById(R.id.txtSenha2);\r\n\r\n                String email = txtEmail.getText().toString();\r\n                String nome = txtNome.getText().toString();\r\n                String telefone = txtTelefone.getText().toString();\r\n                String celular = txtCelular.getText().toString();\r\n                String senha = txtSenha.getText().toString();\r\n                String senha2 = txtSenha2.getText().toString();\r\n\r\n                PessoaDAO dao = new PessoaDAO(getBaseContext());\r\n                boolean sucesso = dao.salvar(email,senha,nome,telefone,celular);\r\n\r\n                Toast.makeText(getBaseContext(), \"Você foi cadastrado com sucesso!\", Toast.LENGTH_LONG).show();\r\n                Intent myIntent = new Intent(getBaseContext(), tela_inicial.class);\r\n                startActivity(myIntent);\r\n                 */\r\n\r\n                Intent myIntent = new Intent(getBaseContext(), tela_inicial.class);\r\n                startActivity(myIntent);\r\n            }\r\n        });\r\n\r\n        btnVoltar.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent myIntent = new Intent(getBaseContext(), tela_inicial.class);\r\n                startActivity(myIntent);\r\n            }\r\n        });\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/cademeuremedio/Registro_Usuario.java	(revision 3a8d3e42fa230c2dcec54f8a4cd3e95acca4c508)
+++ app/src/main/java/com/example/cademeuremedio/Registro_Usuario.java	(date 1607218464720)
@@ -9,6 +9,8 @@
 import android.widget.EditText;
 import android.widget.Toast;
 
+import com.example.cademeuremedio.Model.PessoaDAO;
+
 public class Registro_Usuario extends AppCompatActivity {
 
     @Override
@@ -26,9 +28,11 @@
             @Override
             public void onClick(View view) {
                 /*
+                 */
 
                 EditText txtEmail = (EditText) findViewById(R.id.txtEmail);
                 EditText txtNome = (EditText) findViewById(R.id.txtNome);
+                EditText txtCpf = (EditText) findViewById(R.id.txtNome);
                 EditText txtTelefone = (EditText) findViewById(R.id.txtTelefone);
                 EditText txtCelular = (EditText) findViewById(R.id.txtCelular);
                 EditText txtSenha = (EditText) findViewById(R.id.txtSenha);
@@ -36,6 +40,7 @@
 
                 String email = txtEmail.getText().toString();
                 String nome = txtNome.getText().toString();
+                String cpf = txtCpf.getText().toString();
                 String telefone = txtTelefone.getText().toString();
                 String celular = txtCelular.getText().toString();
                 String senha = txtSenha.getText().toString();
@@ -47,10 +52,9 @@
                 Toast.makeText(getBaseContext(), "Você foi cadastrado com sucesso!", Toast.LENGTH_LONG).show();
                 Intent myIntent = new Intent(getBaseContext(), tela_inicial.class);
                 startActivity(myIntent);
-                 */
-
-                Intent myIntent = new Intent(getBaseContext(), tela_inicial.class);
-                startActivity(myIntent);
+
+                //Intent myIntent = new Intent(getBaseContext(), tela_inicial.class);
+                //startActivity(myIntent);
             }
         });
 
Index: app/src/main/java/com/example/cademeuremedio/Pessoa.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cademeuremedio;\r\n\r\nimport java.io.Serializable;\r\nimport java.sql.Date;\r\n\r\npublic class Pessoa implements Serializable {\r\n\r\n    //private int id;\r\n    //private String cpf;\r\n    private String email;\r\n    private String senha;\r\n    private String nome;\r\n    private String telefone;\r\n    private String celular;\r\n\r\n    public Pessoa( String email, String senha, String nome, String telefone, String celular) {\r\n        //this.id = id;\r\n        //this.cpf = cpf;\r\n        this.email = email;\r\n        this.senha = senha;\r\n        this.nome = nome;\r\n        this.telefone = telefone;\r\n        this.celular = celular;\r\n    }\r\n\r\n    public Pessoa(){\r\n\r\n    }\r\n\r\n    public String getTelefone() {\r\n        return telefone;\r\n    }\r\n\r\n    public void setTelefone(String telefone) {\r\n        this.telefone = telefone;\r\n    }\r\n\r\n    /*\r\n    public int getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public String getCpf() {\r\n        return cpf;\r\n    }\r\n\r\n    public void setCpf(String cpf) {\r\n        this.cpf = cpf;\r\n    }\r\n*/\r\n    public String getEmail() {\r\n        return email;\r\n    }\r\n\r\n    public void setEmail(String email) {\r\n        this.email = email;\r\n    }\r\n\r\n    public String getSenha() {\r\n        return senha;\r\n    }\r\n\r\n    public void setSenha(String senha) {\r\n        this.senha = senha;\r\n    }\r\n\r\n    public String getNome() {\r\n        return nome;\r\n    }\r\n\r\n    public void setNome(String nome) {\r\n        this.nome = nome;\r\n    }\r\n\r\n    public String getCelular() {\r\n        return celular;\r\n    }\r\n\r\n    public void setCelular(String celular) {\r\n        this.celular = celular;\r\n    }\r\n\r\n    @Override\r\n    public boolean equals(Object o){\r\n        return this.email == ((Pessoa)o).email;\r\n    }\r\n\r\n    //Tem como usar esse hashcode com string?\r\n    @Override\r\n    public int hashCode(){\r\n        return 0;\r\n    }\r\n}\r\n\r\n/*\r\n    CREATE TABLE pessoa (\r\n            cpf varchar(15) not null,\r\n    email varchar(50) not null,\r\n    senha varchar(70) not null,\r\n    nome varchar(130) not null,\r\n    celular varchar(15),\r\n    senha_data date,\r\n    PRIMARY KEY (cpf)\r\n);   */
===================================================================
--- app/src/main/java/com/example/cademeuremedio/Pessoa.java	(revision 3a8d3e42fa230c2dcec54f8a4cd3e95acca4c508)
+++ app/src/main/java/com/example/cademeuremedio/Model/Pessoa.java	(date 1607218464756)
@@ -1,7 +1,6 @@
-package com.example.cademeuremedio;
+package com.example.cademeuremedio.Model;
 
 import java.io.Serializable;
-import java.sql.Date;
 
 public class Pessoa implements Serializable {
 
Index: app/src/main/java/com/example/cademeuremedio/PessoaDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cademeuremedio;\r\n\r\nimport android.content.ContentValues;\r\nimport android.content.Context;\r\nimport android.database.Cursor;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.database.sqlite.SQLiteOpenHelper;\r\n\r\nimport java.sql.Date;\r\n\r\npublic class PessoaDAO {\r\n    private final String TABLE_PESSOA = \"pessoa\";\r\n    private DbGateway gw;\r\n    private DbHelper dBase;\r\n    private SQLiteDatabase db;\r\n    private Context contex;\r\n\r\n    public PessoaDAO(Context ctx) {\r\n        gw = DbGateway.getInstance(ctx);\r\n        contex = ctx;\r\n    }\r\n\r\n    public boolean salvar( String email, String senha, String nome, String telefone,String celular) {\r\n        ContentValues cv = new ContentValues();\r\n        cv.put(\"email\",email);\r\n        cv.put(\"senha\",senha);\r\n        cv.put(\"nome\",nome);\r\n        cv.put(\"telefone\",telefone);\r\n        cv.put(\"celular\",celular);\r\n        return gw.getDatabase().insert(TABLE_PESSOA, null, cv) > 0;\r\n    }\r\n\r\n    public Pessoa Pesquisar(String email){\r\n\r\n        Pessoa p = new Pessoa();\r\n        dBase = new DbHelper(contex);\r\n        db = dBase.getReadableDatabase();\r\n\r\n        Cursor cursor = db.rawQuery(\"SELECT email,senha,nome,telefone,celular FROM pessoa WHERE email = ?\", new String[] {email});\r\n        cursor.moveToFirst();\r\n\r\n        if(cursor.getCount() > 0){\r\n\r\n            p = new Pessoa();\r\n            p.setEmail(cursor.getString(0));\r\n            p.setSenha(cursor.getString(1));\r\n            p.setNome(cursor.getString(2));\r\n            p.setTelefone(cursor.getString(3));\r\n            p.setCelular(cursor.getString(4));\r\n        } else {\r\n            p = null;\r\n        }\r\n\r\n        cursor.close();\r\n        db.close();\r\n\r\n        return p;\r\n    }\r\n}\r\n
===================================================================
--- app/src/main/java/com/example/cademeuremedio/PessoaDAO.java	(revision 3a8d3e42fa230c2dcec54f8a4cd3e95acca4c508)
+++ app/src/main/java/com/example/cademeuremedio/Model/PessoaDAO.java	(date 1607218464774)
@@ -1,12 +1,12 @@
-package com.example.cademeuremedio;
+package com.example.cademeuremedio.Model;
 
 import android.content.ContentValues;
 import android.content.Context;
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
-import android.database.sqlite.SQLiteOpenHelper;
 
-import java.sql.Date;
+import com.example.cademeuremedio.DbGateway;
+import com.example.cademeuremedio.DbHelper;
 
 public class PessoaDAO {
     private final String TABLE_PESSOA = "pessoa";
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.1\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.cademeuremedio\"\r\n        minSdkVersion 24\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'\r\n    implementation 'com.google.android.libraries.places:places:2.4.0'\r\n    implementation 'com.google.android.gms:play-services-maps:17.0.0'\r\n    implementation 'com.google.android.gms:play-services-location:17.1.0'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n    implementation 'androidx.annotation:annotation:1.1.0'\r\n    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'\r\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'\r\n    implementation 'com.google.android.libraries.places:places:2.4.0'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 3a8d3e42fa230c2dcec54f8a4cd3e95acca4c508)
+++ app/build.gradle	(date 1607210745850)
@@ -20,6 +20,10 @@
             proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
         }
     }
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_8
+        targetCompatibility JavaVersion.VERSION_1_8
+    }
 }
 
 dependencies {
Index: app/src/main/java/com/example/cademeuremedio/DbHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cademeuremedio;\r\n\r\nimport android.content.Context;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.database.sqlite.SQLiteOpenHelper;\r\n\r\npublic class DbHelper extends SQLiteOpenHelper {\r\n\r\n    private static final String DATABASE_NAME = \"Crud.db\";\r\n    private static final int DATABASE_VERSION = 1;\r\n    private final String CREATE_TABLE_PESSOA = \"CREATE TABLE pessoa (\\n\" +\r\n            \"    cpf varchar(15) not null,\\n\" +\r\n            \"    email varchar(50) not null,\\n\" +\r\n            \"    senha varchar(70) not null,\\n\" +\r\n            \"    nome varchar(130) not null,\\n\" +\r\n            \"    celular varchar(15),\\n\" +\r\n            \"    telefone varchar(15),\\n\" +\r\n            \"    PRIMARY KEY (cpf)\\n\" +\r\n            \");\";\r\n    private final String CREATE_TABLE_UNIDADE = \"CREATE TABLE unidade (\\n\" +\r\n            \"    id_unidade int not null auto_increment,\\n\" +\r\n            \"    email varchar(50) not null,\\n\" +\r\n            \"    nome varchar(130) not null,\\n\" +\r\n            \"    senha varchar(70) not null,\\n\" +\r\n            \"    horario_a varchar(15),\\n\" +\r\n            \"    horario_f varchar(15),\\n\" +\r\n            \"    whatsapp varchar(15),\\n\" +\r\n            \"    localização varchar (100),\\n\" +\r\n            \"    obs varchar(15),\\n\" +\r\n            \"    tipo varchar(15),\\n\" +\r\n            \"    PRIMARY KEY (id_unidade)\\n\" +\r\n            \");\";\r\n    private final String CREATE_TABLE_REMEDIO = \"CREATE TABLE remedio(\\n\" +\r\n            \"\\tid_remedio int not null auto_increment,\\n\" +\r\n            \"\\tnome varchar(50) not null,\\n\" +\r\n            \"    dosagem varchar(15),\\n\" +\r\n            \"    descricao varchar(15),\\n\" +\r\n            \"    PRIMARY KEY (id_remedio)\\n\" +\r\n            \");\";\r\n    private final String CREATE_TABLE_CONSULTA = \"CREATE TABLE consulta(\\n\" +\r\n            \"\\tid_unidade int,\\n\" +\r\n            \"    cpf_pessoa varchar(15),\\n\" +\r\n            \"\\tnome varchar(30) not null,\\n\" +\r\n            \"    PRIMARY KEY (id_unidade,cpf_pessoa),\\n\" +\r\n            \"\\tFOREIGN KEY (id_unidade) REFERENCES unidade(id_unidade),\\n\" +\r\n            \"    FOREIGN KEY (cpf_pessoa) REFERENCES pessoa(cpf)\\n\" +\r\n            \");\";\r\n    private final String CREATE_TABLE_POSSUI = \"CREATE TABLE possui(\\n\" +\r\n            \"    id_remedio int not null,\\n\" +\r\n            \"    id_unidade int not null,\\n\" +\r\n            \"    estoque int ,\\n\" +\r\n            \"    PRIMARY KEY (id_remedio,id_unidade),\\n\" +\r\n            \"    FOREIGN KEY (id_unidade) REFERENCES unidade(id_unidade),\\n\" +\r\n            \"    FOREIGN KEY (id_remedio) REFERENCES remedio(id_remedio)\\n\" +\r\n            \");\";\r\n\r\n    public DbHelper(Context context) {\r\n        super(context, DATABASE_NAME, null, DATABASE_VERSION);\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(SQLiteDatabase db) {\r\n        db.execSQL(CREATE_TABLE_PESSOA);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/cademeuremedio/DbHelper.java	(revision 3a8d3e42fa230c2dcec54f8a4cd3e95acca4c508)
+++ app/src/main/java/com/example/cademeuremedio/DbHelper.java	(date 1607136207138)
@@ -25,6 +25,9 @@
             "    horario_a varchar(15),\n" +
             "    horario_f varchar(15),\n" +
             "    whatsapp varchar(15),\n" +
+            "    place_id varchar(100),\n" +
+            "    lat varchar(50),\n" +
+            "    lng varchar(50),\n" +
             "    localização varchar (100),\n" +
             "    obs varchar(15),\n" +
             "    tipo varchar(15),\n" +
@@ -61,6 +64,11 @@
     @Override
     public void onCreate(SQLiteDatabase db) {
         db.execSQL(CREATE_TABLE_PESSOA);
+        db.execSQL(CREATE_TABLE_UNIDADE);
+        db.execSQL(CREATE_TABLE_REMEDIO);
+        db.execSQL(CREATE_TABLE_POSSUI);
+        db.execSQL(CREATE_TABLE_CONSULTA);
+
 
     }
 
Index: app/src/main/java/com/example/cademeuremedio/Model/RemedioDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/cademeuremedio/Model/RemedioDAO.java	(date 1607222454369)
+++ app/src/main/java/com/example/cademeuremedio/Model/RemedioDAO.java	(date 1607222454369)
@@ -0,0 +1,63 @@
+package com.example.cademeuremedio.Model;
+
+import android.content.ContentValues;
+import android.content.Context;
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
+
+import com.example.cademeuremedio.DbGateway;
+import com.example.cademeuremedio.DbHelper;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class RemedioDAO {
+
+    private final String TABLE_REMEDIO = "remedio";
+    private DbGateway gw;
+    private DbHelper dBase;
+    private SQLiteDatabase db;
+    private Context contex;
+
+    public RemedioDAO(Context ctx) {
+        gw = DbGateway.getInstance(ctx);
+        contex = ctx;
+    }
+
+    public boolean salvar(Remedio remedio) {
+        ContentValues cv = new ContentValues();
+        cv.put("id_remedio",remedio.getId_remedio());
+        cv.put("nome",remedio.getNome());
+        cv.put("dosagem",remedio.getDosagem());
+        cv.put("descricao",remedio.getDescricao());
+        return gw.getDatabase().insert(TABLE_REMEDIO, null, cv) > 0;
+    }
+
+    public Remedio Pesquisar_nome(String nome) {
+
+        Remedio r = new Remedio();
+        dBase = new DbHelper(contex);
+        db = dBase.getReadableDatabase();
+
+        //Ficar atento, talvez dê treta aki dpois
+        Cursor cursor = db.rawQuery("SELECT id_remedio,nome,dosagem,descricao FROM remedio WHERE nome like ?", new String[]{nome});
+        cursor.moveToFirst();
+
+        if (cursor.getCount() > 0) {
+
+            r = new Remedio();
+            r.setId_remedio(Integer.parseInt(cursor.getString(0)));
+            r.setNome(cursor.getString(1));
+            r.setDosagem(cursor.getString(2));
+            r.setDescricao(cursor.getString(3));
+        } else {
+            r = null;
+        }
+
+        cursor.close();
+        db.close();
+
+        return r;
+    }
+
+}
